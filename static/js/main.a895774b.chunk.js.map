{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","avatar","name","message","time","className","src","alt","AlternativeMessage","options","map","option","key","id","text","messageData","optionsMessageData","HW1","Affair","props","affair","onClick","deleteAffairCallback","_id","SuperButton","red","restProps","finalClassName","s","default","Affairs","mappedAffairs","data","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","lastUserName","inputClass","input__container","input","textError","button","GreetingContainer","users","addUserCallback","setName","setError","length","HW3","setUsers","newUser","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","alert","checked","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a895774b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__container\":\"Greeting_input__container__1ayVy\",\"input\":\"Greeting_input__2ntJV\",\"error\":\"Greeting_error__3F7og\",\"button\":\"Greeting_button__3Pppr\",\"textError\":\"Greeting_textError__3utgD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__uqMAp\",\"red\":\"SuperButton_red__3R1-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1JqW4\",\"errorInput\":\"SuperInputText_errorInput__3KdvV\",\"error\":\"SuperInputText_error__2z1wt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2r-yP\",\"column\":\"HW4_column__HEu05\",\"testSpanError\":\"HW4_testSpanError__3ptba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2rDBs\",\"spanClassName\":\"SuperCheckbox_spanClassName__1_e6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2TMv8\"};","import React, { FC } from \"react\";\nimport \"./Message.css\";\n\ninterface MessageProps {\n  avatar: string;\n  name: string;\n  message: string;\n  time: string;\n}\n\nexport const Message: FC<MessageProps> = ({ avatar, name, message, time }) => {\n  return (\n    <div className={\"message\"}>\n      <div className={\"message__img\"}>\n        <img src={avatar} alt=\"profilePic\" />\n      </div>\n      <div className=\"message__body body-message\">\n        <div className=\"body-message__content\">\n          <span className=\"body-message__name\">{name}</span>\n          <span className=\"body-message__text\">{message}</span>\n        </div>\n        <time className=\"body-message__time\">{time}</time>\n      </div>\n    </div>\n  );\n};\n","import React, {FC} from \"react\";\n\ninterface messageOption {\n    id: number;\n    text: string;\n}\n\ninterface AlternativeMessageProps {\n    message: {\n        avatar: string;\n        name: string;\n        message: string;\n        time: string;\n        options: messageOption[];\n    };\n}\n\nexport const AlternativeMessage: FC<AlternativeMessageProps> = ({\n                                                                    message,\n                                                                }) => {\n    return (\n        <div className={\"message\"}>\n            <div className={\"message__img\"}>\n                <img src={message.avatar} alt=\"profilePic\"/>\n            </div>\n            <div className=\"message__body body-message\">\n                <div className=\"body-message__content\">\n                    <span className=\"body-message__name\">{message.name}</span>\n                    <span className=\"body-message__text\">{message.message}</span>\n                    <ul className=\"body-message__list\">\n                        {message.options.map((option) => {\n                            return (\n                                <li key={option.id} className=\"body-message__item\">\n                                    {option.text}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n                <time className=\"body-message__time\">{message.time}</time>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport {Message} from \"./Message\";\nimport {AlternativeMessage} from \"./AlternativeMessage\";\n\nconst messageData = {\n    avatar:\n        \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"some text\",\n    time: \"22:00\",\n};\n\nconst optionsMessageData = {\n    avatar:\n        \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"Check out this options: \",\n    time: \"22:00\",\n    options: [\n        {id: 1, text: \"first option\"},\n        {id: 2, text: \"second option\"},\n        {id: 3, text: \"third option\"},\n    ],\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n            <hr/>\n            <AlternativeMessage message={optionsMessageData}/>\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n\n    return (\n        <div>\n            {props.affair.name}\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[];\n    setFilter: (initialState: FilterType) => void;\n    deleteAffairCallback: (_id: number) => void;\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n\n    }\n    const setLow = () => {\n        props.setFilter('low')\n\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n            <SuperButton onClick={setAll}>\n                All\n            </SuperButton>\n            <SuperButton onClick={setHigh}>\n                High\n            </SuperButton>\n            <SuperButton onClick={setMiddle}>\n                Middle\n            </SuperButton>\n            <SuperButton onClick={setLow}>\n                Low\n            </SuperButton>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\nexport type AffairType = {\n    _id: number;\n    name: string;\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\n    if (filter === 'all') return affairs\n    else return affairs.filter((affair) => affair.priority === filter)\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\n    return affairs.filter((affair) => affair._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React from 'react'\nimport s from './Greeting.module.css'\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype GreetingPropsType = {\n    name: string;\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    addUser: () => void;\n    error: string;\n    totalUsers: number;\n    lastUserName: string;\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, lastUserName} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : ''\n\n    return (\n        <div className={s.input__container}>\n            <SuperInputText\n                value={name}\n                onChange={setNameCallback}\n                className={`${s.input} ${inputClass}`}\n                error={error}\n                spanClassName={s.textError}\n            />\n            <SuperButton onClick={addUser} className={s.button}>\n                add\n            </SuperButton>\n            <span>{totalUsers}</span>\n            {lastUserName && (\n                <div>Привет, {lastUserName}</div>\n            )}\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n    }\n    const addUser = () => {\n        if (!name) {\n            setError('Ошибка! Введите имя')\n            return;\n        }\n        addUserCallback(name)\n        setName('')\n        error && setError('')\n    }\n\n    const totalUsers = users.length\n    const lastUserName = totalUsers > 0 ? users[users.length - 1].name : ''\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            lastUserName={lastUserName}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: number\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([])\n\n    const addUserCallback = (name: string) => {\n        const newUser = {_id: users.length + 1, name}\n        setUsers([...users, newUser])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}